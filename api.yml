openapi: 3.0.3
info:
  title: Neuronic Device API
  description: API for controlling and interacting with the Neuronic device
  version: 1.0.0

paths:
  /programs:
    get:
      summary: Get a list of available programs
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Program"

    post:
      summary: Create a custom program
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ProgramInput"
      responses:
        "201":
          description: Program created successfully
        "400":
          description: Bad request

  /programs/{programId}:
    get:
      summary: Get details of a specific program
      parameters:
        - name: programId
          in: path
          required: true
          description: ID of the program
          schema:
            type: integer
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Program"
        "404":
          description: Program not found

    put:
      summary: Update an existing program
      parameters:
        - name: programId
          in: path
          required: true
          description: ID of the program
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ProgramInput"
      responses:
        "200":
          description: Program updated successfully
        "400":
          description: Bad request
        "404":
          description: Program not found
  /programs/{programId}/usage:
    get:
      summary: Get usage details of a specific program
      description: Retrieve the usage details and status of a program based on its ID.
      parameters:
        - name: programId
          in: path
          required: true
          description: ID of the program
          schema:
            type: integer
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProgramUsage"
        "404":
          description: Program not found
  /clinical-protocol:
    get:
      summary: Get all clinical protocols
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ClinicalProtocolResponse"
    post:
      summary: Start a clinical protocol session
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ClinicalProtocolInput"
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ClinicalProtocolResponse"
        "400":
          description: Bad request
  /clinical-protocol/{sessionId}:
    get:
      summary: Get details of a specific clinical protocol session
      parameters:
        - name: sessionId
          in: path
          required: true
          description: ID of the clinical protocol session
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ClinicalProtocolResponse"
        "404":
          description: Clinical protocol session not found

    put:
      summary: Update an existing clinical protocol session
      parameters:
        - name: sessionId
          in: path
          required: true
          description: ID of the clinical protocol session
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ClinicalProtocolInput"
      responses:
        "200":
          description: Clinical protocol session updated successfully
        "400":
          description: Bad request
        "404":
          description: Clinical protocol session not found

  /notifications:
    get:
      summary: Get all notifications
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Notification"

    post:
      summary: Create a new notification
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/NotificationCreate"
      responses:
        "201":
          description: Notification created successfully
        "400":
          description: Bad request
  /notifications/{notificationId}:
    get:
      summary: Get details of a specific notification
      parameters:
        - name: notificationId
          in: path
          required: true
          description: ID of the notification
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Notification"
        "404":
          description: Notification not found

    put:
      summary: Update a specific notification
      parameters:
        - name: notificationId
          in: path
          required: true
          description: ID of the notification
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/NotificationUpdate"
      responses:
        "200":
          description: Notification updated successfully
        "400":
          description: Bad request
        "404":
          description: Notification not found
  /upgrade:
    post:
      summary: Upgrade to Plus
      description: |
        Upgrade the user's account to the Plus version by entering the order number.
        The server will validate the order number and grant access to additional clinical protocols.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              properties:
                orderNumber:
                  type: string
                  description: Order number for upgrading to Plus
      responses:
        "200":
          description: Upgrade successful
        "400":
          description: Invalid order number
components:
  schemas:
    Program:
      type: object
      properties:
        id:
          type: integer
          description: Unique identifier of the program
        title:
          type: string
          description: Title of the program
        description:
          type: string
          description: Description of the program
        image:
          type: string
          format: uri
          description: URL of the background image for the program
        time:
          type: integer
          description: Duration of the program in minutes
        pulse_rate:
          type: number
          description: Desired pulse rate for the program in Hz
        intensity:
          type: number
          description: Intensity level for the program as a percentage

    ProgramInput:
      type: object
      required:
        - title
        - description
        - image
        - time
        - pulse_rate
        - intensity
      properties:
        title:
          type: string
          description: Title of the program
        description:
          type: string
          description: Description of the program
        image:
          type: string
          format: uri
          description: URL of the background image for the program
        time:
          type: integer
          description: Duration of the program in minutes
        pulse_rate:
          type: number
          description: Desired pulse rate for the program in Hz
        intensity:
          type: number
          description: Intensity level for the program as a percentage
    ClinicalProtocolInput:
      type: object
      required:
        - title
        - totalTime
        - steps
        - breaks
      properties:
        title:
          type: string
          description: Title of the clinical protocol
        totalTime:
          type: integer
          description: Total duration of the clinical protocol in minutes
        steps:
          type: array
          items:
            $ref: "#/components/schemas/Step"
          description: List of steps in the clinical protocol
        breaks:
          type: array
          items:
            $ref: "#/components/schemas/Break"
          description: List of breaks in the clinical protocol

    Step:
      type: object
      required:
        - id
        - time
        - qeegPoints
      properties:
        id:
          type: string
          description: ID of the step
        time:
          type: integer
          description: Duration of the step in minutes
        qeegPoints:
          type: array
          items:
            $ref: "#/components/schemas/QeegPoint"
          description: List of QEEG points for the step

    Break:
      type: object
      required:
        - time
      properties:
        time:
          type: integer
          description: Duration of the break in minutes

    QeegPoint:
      type: object
      required:
        - points
        - pulseRate
        - intensity
      properties:
        points:
          type: string
          description: The selected QEEG point in the brain
        pulseRate:
          type: number
          description: Desired pulse rate for the QEEG point in Hz
        intensity:
          type: number
          description: Intensity level for the QEEG point as a percentage

    ClinicalProtocolResponse:
      type: object
      properties:
        sessionId:
          type: string
          description: ID of the clinical protocol session
        title:
          type: string
          description: Title of the clinical protocol
        totalTime:
          type: integer
          description: Total duration of the clinical protocol in minutes
        steps:
          type: array
          items:
            $ref: "#/components/schemas/Step"
          description: List of steps in the clinical protocol
        breaks:
          type: array
          items:
            $ref: "#/components/schemas/Break"
          description: List of breaks in the clinical protocol
    Notification:
      type: object
      properties:
        id:
          type: string
          description: Unique identifier of the notification
        title:
          type: string
          description: Title of the notification
        message:
          type: string
          description: Message content of the notification
        isRead:
          type: boolean
          description: Indicates whether the notification has been read

    NotificationUpdate:
      type: object
      properties:
        isRead:
          type: boolean
          description: Indicates whether the notification should be marked as read
    NotificationCreate:
      type: object
      properties:
        title:
          type: string
          description: Title of the notification
        message:
          type: string
          description: Message content of the notification
    ProgramUsage:
      type: object
      properties:
        programId:
          type: integer
          description: ID of the program
        status:
          type: string
          description: Status of the program (completed, pending)
        remainingTime:
          type: string
          description: Remaining time to finish the program (formatted as HH:MM:SS)

servers:
  # Added by API Auto Mocking Plugin
  - description: SwaggerHub API Auto Mocking
    url: https://virtserver.swaggerhub.com/THAMEURKALAIZAR/programs/1.0.0
